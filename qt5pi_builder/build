#!/bin/sh -e

set -x
QT_VERSION=5.12
QT_MODULES="qtxmlpatterns qtdeclarative qtserialport qtquickcontrols"
GCC_VERSION=arm-linux-gnueabihf-
BASEDIR=$PWD
BASEREPO=velocity-docker-bikeman
CLEAN=false

DEVICE="linux-rasp-pi3-g++"

# get Sysroot
echo "Get  Sysroot from xxxx"
# create the tree structure

#SYSROOT=$BASEREPO/mysysroot
SYSROOT=/mnt/raspbian/sysroot

if [ ! -d "$SYSROOT" ]; then
	git clone git@github.com:tobimeu/velocity-docker-bikeman.git -b first_step_docker
else
	wget -c  https://downloads.raspberrypi.org/raspbian_lite_latest -o raspbian.zip
fi


USAGE="$(basename "$0") [-h] [-c] [-d device] -- install toolchain and build qt5 for raspberry pi, automated version of https://wiki.qt.io/RaspberryPi2EGLFS

where:
	-h|--help	show this help text
	-c|--clean	clean all modules to force rebuild
	-d|--device	build for a specific device (defaults to linux-rpi3-g++)
	-ls|--localsys	build with a local system root from linux-rpi3-g++)"

while [ $# -gt 0 ]; do
	key="$1"
		
	case $key in
		-c|--clean)
		CLEAN=true
		shift
		;;
		-d|--device)
		DEVICE="$2"
		shift
		shift
		;;
		-h|--help)
		echo "$USAGE"
		exit
		;;
	    	*)
		echo "$USAGE"
		exit
		;;
	esac
done

# clean old build
if [ "$CLEAN" = true ]; then
	rm -rf $BASEDIR/qt5 $BASEDIR/qt5pi
fi
# get compiler

COMPILER=/tmp/gcc-linaro-7.3.1-2018.05-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-
MAKE_OPTS="-j4"

if [ ! -f sysroot-relativelinks.py ]; then
	wget https://raw.githubusercontent.com/riscv/riscv-poky/master/scripts/sysroot-#relativelinks.py
	chmod +x sysroot-relativelinks.py
    ./sysroot-relativelinks.py $SYSROOT
fi
./sysroot-relativelinks.py $SYSROOT


echo $

# build qtcore
if [ ! -d qtbase ]; then
	git clone --depth 1 git://code.qt.io/qt/qtbase.git -b $QT_VERSION
fi


cd qtbase
if [ "$CLEAN" = true ]; then
	git clean -d -f -x
fi
./configure -release -opengl es2 -device $DEVICE  -fontconfig -no-use-gold-linker \
-device-option CROSS_COMPILE=$COMPILER \
-sysroot $SYSROOT -opensource -confirm-license -make libs \
-prefix /usr/local/qt5pi -extprefix $BASEDIR/qt5pi -hostprefix $BASEDIR/qt5 -v
make ${MAKE_OPTS}
make install
cd ..

# build qt modules
for MODULE in $QT_MODULES; do
	if [ ! -d $MODULE ]; then
		git clone --depth 1 git://code.qt.io/qt/$MODULE.git -b $QT_VERSION
	fi
	echo entering $MODULE
	cd $MODULE
	if [ "$CLEAN" = true ]; then
		git clean -d -f -x
	fi
	$BASEDIR/qt5/bin/qmake
	make ${MAKE_OPTS}
	make install
	cd ..
done
